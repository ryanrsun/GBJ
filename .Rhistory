xlimits <- c(0, xmax)
plot(1, type='n', xlim=xlimits, ylim=c(0, 1),
main=main_exp, cex.main=3, xaxt="n", yaxt='n', xlab='', ylab='')
axis(side=1, at=seq(from=0, to=xmax, by=0.1), labels=as.character(seq(from=0, to=xmax, by=0.1)), cex.axis=2.5)
axis(side=2, at=seq(from=0, to=1, by=0.1), labels=as.character(seq(from=0, to=1, by=0.1)), cex.axis=2.5)
title(ylab=yexp, line=3.5, cex.lab=2.7)
title(xlab=xexp, line=3, cex.lab=2.7)
smooth_BJ_ss <- smooth.spline(plot_dat$BJ_SS ~ plot_dat$rho2, spar=0.4)
smooth_HC_ss <- smooth.spline(plot_dat$HC_SS ~ plot_dat$rho2, spar=0.4)
smooth_VC_ss <- smooth.spline(plot_dat$VC_SS ~ plot_dat$rho2, spar=0.4)
smooth_BJ_mp <- smooth.spline(plot_dat$BJ_MP ~ plot_dat$rho2, spar=0.4)
smooth_HC_mp <- smooth.spline(plot_dat$HC_MP ~ plot_dat$rho2, spar=0.4)
smooth_VC_mp <- smooth.spline(plot_dat$VC_MP ~ plot_dat$rho2, spar=0.4)
lines(smooth_BJ_ss, col='blue', lwd=3, lty=2, cex=2)
lines(smooth_HC_ss, col='red', lwd=3, lty=2, cex=2)
lines(smooth_VC_ss, col='green', lwd=3, lty=2, cex=2)
lines(smooth_BJ_mp, col='blue', lwd=3, lty=1, cex=2)
lines(smooth_HC_mp, col='red', lwd=3, lty=1, cex=2)
lines(smooth_VC_mp, col='green', lwd=3, lty=1, cex=2)
legend(x=0, y=1.05, c('BJ, MP (K:1)', 'HC, MP (K:1)', 'VC, MP (K:1)',
'BC, SS (1:K)', 'HC, SS (1:K)', 'VC, SS (1:K)'),
col=c('blue', 'red', 'green', 'blue', 'red', 'green'),
lwd=c(3,3,3,3,3), lty=c(1, 1, 1, 2, 2, 2), cex=1.5, bty='n')
############################################################################################################
# Rejection regions
setwd('/users/ryansun/desktop/stuff')
d <- 10
bounds_mat <- matrix(data=NA, nrow=d, nco=2)
bounds_mat <- data.frame(bounds_mat)
colnames(bounds_mat) <- c('PC', 'Original')
# Inverse of the HC objective, gives us the bounds for crossprob
HC_inv <- function(h, d) {
i_vec <- 1:d
((2*i_vec+h^2)/d - sqrt((2*i_vec/d+h^2/d)^2 - 4*i_vec^2/d^2 - 4*i_vec^2*h^2/d^3))/(2*(1+h^2/d))
}
sig_vec <- rep(0.3, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
# Guess and check to find the value of h that gets us to \alpha=0.05
# Independence case first (i.e bounds for PC)
h <- 4.66153
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$PC <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
# Do the analytic pvalue calculation
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 1), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
h <- 5.41582
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
# Remove so we don't get mixed up for the next iteration
system2(command="rm", args=hcbounds_name, wait=TRUE)
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("#56B4E9", "green4")) + scale_linetype_manual(values=c(3,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
theme(text = element_text(size=14))
library(ggplot2)
system2(command="rm", args=hcbounds_name, wait=TRUE)
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("#56B4E9", "green4")) + scale_linetype_manual(values=c(3,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
theme(text = element_text(size=14))
plot_dat
############################################################################################################
# Rejection regions
setwd('/users/ryansun/desktop/stuff')
d <- 10
bounds_mat <- matrix(data=NA, nrow=d, nco=2)
bounds_mat <- data.frame(bounds_mat)
colnames(bounds_mat) <- c('PC', 'Original')
# Inverse of the HC objective, gives us the bounds for crossprob
HC_inv <- function(h, d) {
i_vec <- 1:d
((2*i_vec+h^2)/d - sqrt((2*i_vec/d+h^2/d)^2 - 4*i_vec^2/d^2 - 4*i_vec^2*h^2/d^3))/(2*(1+h^2/d))
}
sig_vec <- rep(0.3, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
# Guess and check to find the value of h that gets us to \alpha=0.05
# Independence case first (i.e bounds for PC)
h <- 4.66153
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$PC <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
HC_z_bounds
# Do the analytic pvalue calculation
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 1), stdout=TRUE))
###########################################
# Now guess and check for exchangeable correlation \rho=0.3
h <- 5.41582
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
HC_z_bounds
bounds_mat
# Remove so we don't get mixed up for the next iteration
system2(command="rm", args=hcbounds_name, wait=TRUE)
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("#56B4E9", "green4")) + scale_linetype_manual(values=c(3,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
theme(text = element_text(size=14))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.41582
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.7
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.68
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.65
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.66
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.658
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.655
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6551
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6553
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
#####################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6555
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6557
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
ess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6558
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(comman
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6558
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6558
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
########################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.6559
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
################################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.658
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
###################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.656
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
##################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.657
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
# Remove so we d
#########################################
# Now guess and check for exchangeable correlation \rho=0.3
sig_vec <- rep(0.5, 45)
write.table(sig_vec, file='sigvec.txt', quote=F, append=F, row.names=F, col.names=F)
h <- 6.657
HC_p_bounds <- HC_inv(h, d)
HC_z_bounds <- qnorm(1-HC_p_bounds/2)
HC_z_bounds <- sort(HC_z_bounds, decreasing=F)
bounds_mat$Original <- HC_z_bounds
hcbounds_name <- paste(d, 'snps.HCbounds.txt', sep='')
write.table(HC_z_bounds, file=hcbounds_name, append=F, quote=F, row.names=F, col.name=F, sep=', ')
as.numeric(system2(command="./ebb_crossprob_cor", args=c(d, hcbounds_name, 'sigvec.txt'), stdout=TRUE))
# Remove so we don't get mixed up for the next iteration
system2(command="rm", args=hcbounds_name, wait=TRUE)
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
theme(text = element_text(size=14))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Bounds, group = Test))
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= rep(2,10), group = Test))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= rep(2,20), group = Test))
# Signals
beta <- c(rep(1, 3), rep(0, 7))
sig_mat <- matrix(data=0.5, nrow=10, ncol=10)
diag(sig_mat) <- 1
t(eigen(sig_mat)$vectors) %*% beta
# Signals
beta <- c(rep(1, 3), rep(0, 7))
sig_mat <- matrix(data=0.5, nrow=10, ncol=10)
diag(sig_mat) <- 1
evals <- eigen(sig_mat)$values
evecs <- eigen(sig_mat)$vectors
ss_signals <- diag(1/sqrt(evals)) %*% t(evecs) %*% beta
mp_signals <- diag(sqrt(evals)) %*% t(evecs) %*% beta
ss_signals
mp_signals
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(beta, mp_signals))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, group = Test)) + scale_color_manual(values=c("blue", "green4")) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(beta, mp_signals))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, group = Test)) +
theme(text = element_text(size=14))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(beta), sort(abs(mp_signals)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, group = Test)) +
theme(text = element_text(size=14))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(beta), sort(abs(mp_signals))))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, group = Test)) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, group = Test)) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) + geom_point(aes(y = Bounds, color=Test, linetype=Test))  + labs(title='Rejection Regions: n=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') + scale_x_continuous(breaks=1:10) +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title='Rejection Regions: d=10, exchangeable correlation=0.5', x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
mytitle <- expr(paste("Exchangeable correlation ", rho, "=0.5"))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title=mytitle, x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
mytitle <- expression(paste("Exchangeable correlation ", rho, "=0.5"))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title=mytitle, x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
mytitle <- expression(paste("Phenotypes with Exchangeable Correlation", rho, "=0.5"))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title=mytitle, x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
mytitle <- expression(paste("Phenotypes with Exchangeable Correlation ", rho, "=0.5"))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title=mytitle, x='Ordered Test Statistics (smallest to largest in magnitude)', y='Absolute Value') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
# Plot
mytitle <- expression(paste("Phenotypes with Exchangeable Correlation ", rho, "=0.5"))
plot_dat <- data.frame( Order=c(1:10, 1:10), Test=rep(c('PC', 'Original'), each=10),
Bounds=c(bounds_mat$PC, bounds_mat$Original), Signals=c(sort(abs(mp_signals)), sort(beta)))
ggplot(plot_dat, aes(x =Order, y=Bounds, col=Test, linetype=Test, shape=Test))  +
geom_line(aes(y = Bounds, group = Test)) + scale_color_manual(values=c("blue", "green4")) + scale_linetype_manual(values=c(1,1)) +
geom_point(aes(y = Bounds, color=Test, linetype=Test))  + scale_x_continuous(breaks=1:10) +
labs(title=mytitle, x='Ordered Test Statistics (smallest to largest in magnitude)', y='HC Bounds') +
geom_point(aes(y= Signals, colour = Test, shape=Test)) +
theme(text = element_text(size=14))
library(devtools)
build()
library(devtools)
build()
build()
